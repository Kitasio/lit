<.modal
  :if={@current_tut}
  id="tut-generations-modal"
  show={@current_tut != nil}
  banner_url={@current_tut.banner_url}
  on_confirm={hide_modal("tut-generations-modal")}
  on_cancel={hide_modal("tut-generations-modal")}
>
  <:title><%= @current_tut.header %></:title>
  <.tutorial_text entries={@current_tut.text} />
  <:confirm><%= @current_tut.button %></:confirm>
</.modal>
<.navbar
  images_exist={has_images?(@current_user)}
  covers_exist={Media.has_covers?(@current_user)}
  locale={@locale}
  request_path={~p"/#{@locale}/images"}
  current_user={@current_user}
  show_cover_pinger={Media.has_unseen_covers?(@current_user)}
/>
<div x-data="" class="grow px-8 py-10">
  <div class="flex gap-10 text-sm">
    <.link navigate={~p"/#{@locale}/images/all"}>
      <span x-bind:class={"'#{@live_action}' == 'all' && 'text-accent-main'"}>
        <%= gettext("All") %>
      </span>
    </.link>
    <.link navigate={~p"/#{@locale}/images/favorites"}>
      <span x-bind:class={"'#{@live_action}' == 'favorites' && 'text-accent-main'"}>
        <%= gettext("Favorites") %>
      </span>
    </.link>
  </div>
  <div
    :if={@images == []}
    class="mt-7 grid sm:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 gap-10 lg:gap-20"
  >
    <.link
      navigate={~p"/#{@locale}/images/new"}
      class="text-slate-300 aspect-cover bg-sec/70 rounded-xl border-2 border-sec text-slate-300 gap-2 flex flex-col items-center justify-center"
    >
      <img src="/images/porro.svg" />
      <%= gettext("Nothing here so far") %>
    </.link>
  </div>
  <div
    id="user-images"
    phx-update="append"
    class="mt-7 grid sm:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 gap-10 lg:gap-20"
  >
    <%= for image <- @images do %>
      <div class="absolute" id={"modal-box-#{image.id}"}>
        <.modal
          id={"unlock-modal-#{image.id}"}
          banner_url={insert_image_watermark(image)}
          banner_top={false}
          on_confirm={JS.push("unlock", value: %{image_id: image.id})}
          on_cancel={hide_modal("unlock-modal-#{image.id}")}
        >
          <:title><%= gettext("Unlock image") %></:title>
          <.unlock_modal_text />
          <:confirm><%= gettext("Unlock") %></:confirm>
          <:cancel><%= gettext("Cancel") %></:cancel>
        </.modal>

        <.modal
          id={"redo-image-#{image.id}"}
          banner_url={image.url}
          banner_top={false}
          on_cancel={hide_modal("redo-image-#{image.id}")}
        >
          <.live_component
            module={LitcoversWeb.ImageLive.ChatComponent}
            id={"redo-image-#{image.id}-live"}
            form={UserChatMessage.changeset(%UserChatMessage{}, %{})}
            title={gettext("Edit the image")}
            image_id={image.id}
            locale={@locale}
          />
        </.modal>
      </div>

      <div id={"img-#{image.id}-box"} x-data="" class="relative">
        <div :if={!image.unlocked} class="absolute top-5 left-5 z-30">
          <div class="relative group">
            <.icon name="hero-clock" class="cursor-pointer w-6 h-6 text-orange-300" />
            <.tooltip position="top">
              <%= gettext("Locked image, dissapears after 24 hours") %>
            </.tooltip>
          </div>
        </div>
        <.img
          id={"#{image.id}-img"}
          locale={@locale}
          image_id={image.id}
          img_url={insert_image_watermark(image)}
          unlocked={image.unlocked}
          class={
            if !image.unlocked do
              "opacity-50"
            end
          }
        >
          <:top>
            <div class="p-2.5 gap-3 flex justify-end w-full">
              <.edit_btn url={~p"/#{@locale}/images/#{image.id}/edit"} />
              <.heart_button
                phx-click={
                  JS.push("toggle-favorite", value: %{image_id: image.id})
                  |> JS.transition("scale-90", to: "#heart-#{image.id}")
                }
                favorite={image.favorite}
                image_id={image.id}
              />
              <.download_btn image_url={
                "#{image.url}?ik-attachment=true" |> Imagekit.transform("q-100,f-jpg")
              } />
              <.delete_img_button
                phx-click={
                  JS.push("delete-image", value: %{image_id: image.id})
                  |> JS.transition("scale-90", to: "#delete-#{image.id}")
                  |> hide("#img-#{image.id}-box")
                }
                image_id={image.id}
              />
            </div>
          </:top>
          <:bottom :if={image.unlocked}>
            <div class="flex gap-3">
              <.button class="w-full" phx-click={show_modal("redo-image-#{image.id}")}>
                <%= gettext("Edit") %>
              </.button>
              <.regenerate_btn url={~p"/#{@locale}/images/new/#{image.id}/redo"} />
            </div>
          </:bottom>
          <:bottom :if={!image.unlocked}>
            <div class="flex gap-3">
              <.button class="w-full" phx-click={show_modal("unlock-modal-#{image.id}")}>
                <%= gettext("Unlock") %><span class="ml-2">(-1 <.icon
                    name="hero-book-open"
                    class="w-4 h-4"
                  />)</span>
              </.button>
              <.regenerate_btn
                :if={!Enum.empty?(image.ideas)}
                url={~p"/#{@locale}/images/new/#{image.id}/redo"}
              />
            </div>
          </:bottom>
        </.img>
      </div>
    <% end %>
  </div>
  <div id="infinite-scroll-marker" phx-hook="InfiniteScroll" data-page={@page}></div>
</div>
